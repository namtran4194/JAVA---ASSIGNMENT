package client;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import common.Mess;

/**
 * The CaroFrame class inheriting the JFrame displays panel CaroGraphics and text chat.
 * and this class implements to receive message from server.
 */
@SuppressWarnings("serial")
public class CaroFrame extends javax.swing.JFrame implements inReceiveMessage {
	private boolean turnOnChat ;
	private boolean isMyTurn;
	private String tenDoiThu;
	private String tenPhong;
	CaroGraphics caro;
	private int a;
	private ListenServer listenServer;
	
	/**
     * Creates new form CaroFrame for this player
     * @param listenServer a ListenServer;
     * @param isMyTurn set who are player play first turn.
	 * @param turnOnChat set some options to watcher that diferent player.
	 * @param name The competitor's name
     */
    public CaroFrame(ListenServer listenServer,boolean isMyTurn, boolean turnOnChat, String name) {
    	this.tenDoiThu = name;
    	this.listenServer = listenServer;
    	this.listenServer.receive = this;
    	this.isMyTurn = isMyTurn;
    	this.a =(isMyTurn)?1:2;
    	this.turnOnChat = turnOnChat;
        this.tenPhong =this.listenServer.player.getName()+" vs " +this.tenDoiThu;
        initComponents();
        this.setTitle(this.tenPhong);
    }
    /**
     * Creates new form CaroFrame for this player
     * @param listenServer a ListenServer;
     * @param isMyTurn set who are player play first turn.
	 * @param turnOnChat set some options to watcher that diferent player.
	 * @param name The competitor's name
     */
    public CaroFrame(String name, ListenServer listenServer, boolean isMyturn, boolean turnOnChat ){
    	this.tenDoiThu = name;
    	this.listenServer = listenServer;
    	this.listenServer.receive = this;
    	this.isMyTurn = isMyTurn;
    	this.a =(isMyTurn)?1:2;
    	this.turnOnChat = turnOnChat;
    	this.tenPhong = this.tenDoiThu+" vs "+this.listenServer.player.getName();
    	initComponents();
        this.setTitle(this.tenPhong );
    }
    /**
     * Creates new form CaroFrame for a watcher
     * @param listenServer a ListenServer;
     * @param isMyTurn :false.
	 * @param turnOnChat :false, turn off chat
	 * @param tenPhong Room's name
     */
    public CaroFrame(ListenServer listenServer,String tenPhong, boolean isMyturn, boolean turnOnChat, int[][] board){
    	this.listenServer = listenServer;
    	this.listenServer.receive = this;
    	this.isMyTurn = isMyTurn;
    	this.turnOnChat = turnOnChat;
    	this.tenPhong = tenPhong;
    	initComponents();
    	this.caro.setBoard(board);
    	repaint();
        this.setTitle(this.tenPhong );
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
    	caro = new CaroGraphics();
    	caro.setBoard();
    	caro.setPreferredSize(new Dimension(caro.width, caro.height));
    	caro.addMouseListener(new MouseAdapter() {
	         @Override
	         public void mouseClicked(MouseEvent e) {  // mouse-clicked handler
	            int mouseX = e.getX();
	            int mouseY = e.getY();
	            // Get the row and column clicked
	            int rowSelected = mouseY / caro.sizeCell;
	            int colSelected = mouseX / caro.sizeCell;
	            if(isMyTurn==true && caro.setPoint(a, rowSelected, colSelected)){
	            	isMyTurn = false;
	            	jLabel1.setText("Doi doi thu... ");
	            	repaint();
	            	String msg = tenPhong +"|" + rowSelected + "|" + colSelected;
	            	try {
						listenServer.SendMessage(9, msg);
					} catch (IOException e1) {
						e1.printStackTrace();
					}
	            }
	            // Refresh the drawing canvas
	            repaint();  // Call-back paintComponent().
	         }
	      });
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField(15);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEditable(false);
        jScrollPane1.setViewportView(jTextArea1);
        jButton1.setText("Send");
        jButton1.setMnemonic(KeyEvent.VK_S);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton2.setText("Exit Room");
        jButton2.setMnemonic(KeyEvent.VK_E);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        if(a==1) {
        	jLabel2.setText(listenServer.player.getName()+ " danh 'X'");
        	jLabel3.setText(tenDoiThu + " danh 'O'");
        }
        else {
        	jLabel2.setText(listenServer.player.getName()+ " danh 'O'");
        	jLabel3.setText(tenDoiThu + " danh 'X'");
        }
        //jLabel2.setText("jLabel2");

        //jLabel3.setText("jLabel3");
        if( this.turnOnChat == false){
    		this.jScrollPane1.setEnabled(false);
    		this.jButton1.setEnabled(false);
    		this.jTextField1.setEnabled(false);
    		StringTokenizer str = new StringTokenizer(this.tenPhong," ");
    		jLabel2.setText(str.nextToken()+ " danh 'X'");
    		str.nextToken();
        	jLabel3.setText(str.nextToken() + " danh 'O'");
    	}

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(caro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(44, 44, 44))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(caro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(72, 72, 72))
        );

        pack();
    }

    /**
     * The method handling event player click Send button to chat.
     */
    public void jButton1ActionPerformed(java.awt.event.ActionEvent evt){
    	this.jTextArea1.append((String)(listenServer.player.getName()+": "+this.jTextField1.getText())+"\n");
    	String msg = tenPhong +"|" +this.jTextField1.getText() ;
    	try {
			listenServer.SendMessage(12, msg);
		} catch (IOException e) {
			e.printStackTrace();
		}
    	this.jTextField1.resetKeyboardActions();
    }
    /**
     * The method handling event player click Exit Room button.
     */
    public void jButton2ActionPerformed(java.awt.event.ActionEvent evt){
    	if(turnOnChat == true){
    		try {
    			listenServer.SendMessage(14, this.tenPhong);
    		} catch (IOException e) {
    			e.printStackTrace();
    		}
    	}
    	this.dispose();
    }
    /**
  		* The method handling message receive from server
  		*/
    public void ReceiveMessage(Mess mess){
    	switch(mess.getType()){
    	case 12: {
    		this.jTextArea1.append((String)mess.getContent()+"\n");
    		break;
    	}
    	case 10: {
    		StringTokenizer str = new StringTokenizer((String)mess.getContent(),"|");
    		if(this.tenPhong.compareToIgnoreCase(str.nextToken())==0){
    			int rowSelected = Integer.parseInt(str.nextToken());
    			int colSelected = Integer.parseInt(str.nextToken());
    			if(this.a ==1) this.caro.setPoint(2, rowSelected, colSelected);
    			else this.caro.setPoint(1, rowSelected, colSelected);
    			this.isMyTurn = true;
    			jLabel1.setText("Toi luot ban...");
    			this.repaint();
    		}
    		break;
    	}
    	case 11:{
    		JOptionPane.showMessageDialog(null, mess.getContent() +" da thang!");
    		this.caro.setBoard();
    		this.repaint();
    		break;
    	}
    	case 14: {
    		JOptionPane.showMessageDialog(null, "Doi thu da thoat!");
    		this.dispose();
    		break;
    	}
    	case 20:{
    		StringTokenizer str = new StringTokenizer((String)mess.getContent(),"|");
    		if(this.tenPhong.compareToIgnoreCase(str.nextToken())==0){
    			this.caro.setPoint(Integer.parseInt(str.nextToken()), Integer.parseInt(str.nextToken()), Integer.parseInt(str.nextToken()));
    			jLabel1.setText("Toi luot ban...");
    			this.repaint();
    		}
    		break;
    	}
    }
    }
    // </editor-fold>                        
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
